package gui;

import data.GameDA;
import java.awt.Color;
import java.awt.image.BufferedImage;
import java.io.InputStream;
import java.util.List;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Arne
 */
public class ShopFrame extends javax.swing.JFrame {

    private int level = 0;
    private List<model.Character> allCharacters;
    private List<CompanionShop> allCompanions;
    private static String playername;
    private int playerId;
    
    private int charCounter;
    private int charId;
    private int selectedCharCounter;
    
    private int companionCounter;
    private int companionId;
    private int selectedCompanionCounter;

    public ShopFrame(String playername) {
        initComponents();
        this.playername = playername;
        playerId = GameDA.getInstance().getPlayerId(this.playername);
        allCharacters = GameDA.getInstance().getShips();
        allCompanions = GameDA.getInstance().getCompanions();
        
        charCounter = 1;
        charId = 0;
        selectedCharCounter = 1;
        
        companionCounter = 1;
        companionId = 0;
        selectedCompanionCounter = 1;
        //System.out.println(charCounter);
        showSelectedCharCounter();
        InitCharacters();
        InitCompanions();
        checkBoughtandSelect();
        checkBoughtandSelectCompanion();
        getGeomsAndCoins();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanelUpgrades = new javax.swing.JPanel();
        lblSpeed = new javax.swing.JLabel();
        lblBulletPower = new javax.swing.JLabel();
        lblBulletSpeed = new javax.swing.JLabel();
        lblFireRate = new javax.swing.JLabel();
        lblHitpoints = new javax.swing.JLabel();
        lblMovementspeedGems = new javax.swing.JLabel();
        lblUpgradeBarSpeed = new javax.swing.JLabel();
        lblUpgradeBarFireRate = new javax.swing.JLabel();
        lblUpgradeBarHitpoints = new javax.swing.JLabel();
        lblUpgradeBarBulletPower = new javax.swing.JLabel();
        lblUpgradeBarBulletSpeed = new javax.swing.JLabel();
        lblIconSpeed = new javax.swing.JLabel();
        lblIconSpeed1 = new javax.swing.JLabel();
        lblIconSpeed2 = new javax.swing.JLabel();
        lblIconSpeed3 = new javax.swing.JLabel();
        lblIconSpeed4 = new javax.swing.JLabel();
        lblIconGemsSpeed = new javax.swing.JLabel();
        lblIconGemsBulletSpeed = new javax.swing.JLabel();
        lblIconGemsBulletPower = new javax.swing.JLabel();
        lblIconGemsFireRate = new javax.swing.JLabel();
        lblIconGemsHitpoints = new javax.swing.JLabel();
        btnPlusSpeed = new javax.swing.JButton();
        btnPlusBulletSpeed = new javax.swing.JButton();
        btnPlusFireRate = new javax.swing.JButton();
        btnPlusHitpoints = new javax.swing.JButton();
        btnPlusBulletPower = new javax.swing.JButton();
        lblBulletspeedGems = new javax.swing.JLabel();
        lblBulletdamageGems = new javax.swing.JLabel();
        lblFirerateGems = new javax.swing.JLabel();
        lblHitpointsGems = new javax.swing.JLabel();
        jPanelCompanionUpgrades = new javax.swing.JPanel();
        lblBulletSpeed1 = new javax.swing.JLabel();
        lblUpgradeBarCompanion = new javax.swing.JLabel();
        lblIconSpeed6 = new javax.swing.JLabel();
        lblIconGemsBulletSpeed1 = new javax.swing.JLabel();
        btnPlusCompanion = new javax.swing.JButton();
        lblCompanionGems = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanelShip = new javax.swing.JPanel();
        lblShipsName = new javax.swing.JLabel();
        lblAfbeeldingSchip = new javax.swing.JLabel();
        btnNextShip = new javax.swing.JButton();
        btnPreviousShip = new javax.swing.JButton();
        btnUpgradeShip = new javax.swing.JButton();
        current_ship = new javax.swing.JLabel();
        current_selected_ship = new javax.swing.JLabel();
        btnShipSelect = new javax.swing.JButton();
        btnShipBuy = new javax.swing.JButton();
        lblPrice = new javax.swing.JLabel();
        jPanelCompanion = new javax.swing.JPanel();
        lblCompanionName = new javax.swing.JLabel();
        lblAfbeeldingCompanion = new javax.swing.JLabel();
        btnNextCompanion = new javax.swing.JButton();
        btnPreviousCompanion = new javax.swing.JButton();
        btnUpgradeCompanion = new javax.swing.JButton();
        current_ship1 = new javax.swing.JLabel();
        current_selected_companion = new javax.swing.JLabel();
        btnCompanionSelect = new javax.swing.JButton();
        btnCompanionBuy = new javax.swing.JButton();
        lblCompanionPrice = new javax.swing.JLabel();
        jPanelCurrency = new javax.swing.JPanel();
        lblCoins = new javax.swing.JLabel();
        lblContentCoins = new javax.swing.JLabel();
        lblGems = new javax.swing.JLabel();
        lblContentGems = new javax.swing.JLabel();
        btnShip = new javax.swing.JButton();
        btnCompanion = new javax.swing.JButton();
        lblShip = new javax.swing.JLabel();
        lblCompanion = new javax.swing.JLabel();
        btnStartGame = new javax.swing.JButton();
        btnClan = new javax.swing.JButton();
        btnSettings = new javax.swing.JButton();
        btnHighscores = new javax.swing.JButton();
        btnBackUpgrades = new javax.swing.JButton();
        lblBackground = new javax.swing.JLabel();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(800, 650));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        jPanelUpgrades.setBackground(new java.awt.Color(0, 102, 0));
        jPanelUpgrades.setMinimumSize(new java.awt.Dimension(660, 350));
        jPanelUpgrades.setPreferredSize(new java.awt.Dimension(660, 350));

        lblSpeed.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblSpeed.setText("Speed");

        lblBulletPower.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblBulletPower.setText("Bullet Power");

        lblBulletSpeed.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblBulletSpeed.setText("BulletSpeed");

        lblFireRate.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblFireRate.setText("Fire Rate");

        lblHitpoints.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblHitpoints.setText("Hitpoints");

        lblMovementspeedGems.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        lblMovementspeedGems.setText("Gems");

        lblUpgradeBarSpeed.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/onderdelen/upgradeBar/bar-0.png"))); // NOI18N

        lblUpgradeBarFireRate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/onderdelen/upgradeBar/bar-0.png"))); // NOI18N

        lblUpgradeBarHitpoints.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/onderdelen/upgradeBar/bar-0.png"))); // NOI18N

        lblUpgradeBarBulletPower.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/onderdelen/upgradeBar/bar-0.png"))); // NOI18N

        lblUpgradeBarBulletSpeed.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/onderdelen/upgradeBar/bar-0.png"))); // NOI18N

        lblIconSpeed.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/onderdelen/upgradeIcons/speed.png"))); // NOI18N
        lblIconSpeed.setText("jLabel1");

        lblIconSpeed1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/onderdelen/upgradeIcons/bulletSpeed.png"))); // NOI18N
        lblIconSpeed1.setText("jLabel1");

        lblIconSpeed2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/onderdelen/upgradeIcons/hitpoints.png"))); // NOI18N
        lblIconSpeed2.setText("jLabel1");

        lblIconSpeed3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/onderdelen/upgradeIcons/fireRate.png"))); // NOI18N
        lblIconSpeed3.setText("jLabel1");

        lblIconSpeed4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/onderdelen/upgradeIcons/bulletPower.png"))); // NOI18N
        lblIconSpeed4.setText("jLabel1");

        lblIconGemsSpeed.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/sprites/geomSprite.png"))); // NOI18N

        lblIconGemsBulletSpeed.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/sprites/geomSprite.png"))); // NOI18N

        lblIconGemsBulletPower.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/sprites/geomSprite.png"))); // NOI18N

        lblIconGemsFireRate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/sprites/geomSprite.png"))); // NOI18N

        lblIconGemsHitpoints.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/sprites/geomSprite.png"))); // NOI18N

        btnPlusSpeed.setText("+");
        btnPlusSpeed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlusSpeedActionPerformed(evt);
            }
        });

        btnPlusBulletSpeed.setText("+");
        btnPlusBulletSpeed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlusBulletSpeedActionPerformed(evt);
            }
        });

        btnPlusFireRate.setText("+");
        btnPlusFireRate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlusFireRateActionPerformed(evt);
            }
        });

        btnPlusHitpoints.setText("+");
        btnPlusHitpoints.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlusHitpointsActionPerformed(evt);
            }
        });

        btnPlusBulletPower.setText("+");
        btnPlusBulletPower.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlusBulletPowerActionPerformed(evt);
            }
        });

        lblBulletspeedGems.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        lblBulletspeedGems.setText("Gems");

        lblBulletdamageGems.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        lblBulletdamageGems.setText("Gems");

        lblFirerateGems.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        lblFirerateGems.setText("Gems");

        lblHitpointsGems.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        lblHitpointsGems.setText("Gems");

        javax.swing.GroupLayout jPanelUpgradesLayout = new javax.swing.GroupLayout(jPanelUpgrades);
        jPanelUpgrades.setLayout(jPanelUpgradesLayout);
        jPanelUpgradesLayout.setHorizontalGroup(
            jPanelUpgradesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelUpgradesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelUpgradesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelUpgradesLayout.createSequentialGroup()
                        .addGroup(jPanelUpgradesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblIconSpeed, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblIconSpeed4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblIconSpeed3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblIconSpeed2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelUpgradesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelUpgradesLayout.createSequentialGroup()
                                .addGroup(jPanelUpgradesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelUpgradesLayout.createSequentialGroup()
                                        .addComponent(lblBulletSpeed)
                                        .addGap(18, 18, 18)
                                        .addComponent(lblUpgradeBarBulletSpeed))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelUpgradesLayout.createSequentialGroup()
                                        .addComponent(lblBulletPower)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(lblUpgradeBarBulletPower)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnPlusBulletPower, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanelUpgradesLayout.createSequentialGroup()
                                .addGroup(jPanelUpgradesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblFireRate)
                                    .addComponent(lblHitpoints)
                                    .addComponent(lblSpeed))
                                .addGroup(jPanelUpgradesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanelUpgradesLayout.createSequentialGroup()
                                        .addGap(46, 46, 46)
                                        .addComponent(lblUpgradeBarHitpoints)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnPlusHitpoints, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanelUpgradesLayout.createSequentialGroup()
                                        .addGap(46, 46, 46)
                                        .addComponent(lblUpgradeBarFireRate)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnPlusFireRate, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanelUpgradesLayout.createSequentialGroup()
                                        .addGap(44, 44, 44)
                                        .addGroup(jPanelUpgradesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(btnPlusBulletSpeed, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jPanelUpgradesLayout.createSequentialGroup()
                                                .addComponent(lblUpgradeBarSpeed)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(btnPlusSpeed, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addGap(2, 2, 2)))
                        .addGroup(jPanelUpgradesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelUpgradesLayout.createSequentialGroup()
                                .addComponent(lblMovementspeedGems, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblIconGemsSpeed))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelUpgradesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(jPanelUpgradesLayout.createSequentialGroup()
                                    .addGap(0, 2, Short.MAX_VALUE)
                                    .addComponent(lblBulletspeedGems, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(lblIconGemsBulletSpeed))
                                .addGroup(jPanelUpgradesLayout.createSequentialGroup()
                                    .addComponent(lblBulletdamageGems, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblIconGemsBulletPower))
                                .addGroup(jPanelUpgradesLayout.createSequentialGroup()
                                    .addComponent(lblHitpointsGems, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblIconGemsHitpoints))
                                .addGroup(jPanelUpgradesLayout.createSequentialGroup()
                                    .addComponent(lblFirerateGems, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblIconGemsFireRate))))
                        .addContainerGap())
                    .addGroup(jPanelUpgradesLayout.createSequentialGroup()
                        .addComponent(lblIconSpeed1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanelUpgradesLayout.setVerticalGroup(
            jPanelUpgradesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelUpgradesLayout.createSequentialGroup()
                .addGroup(jPanelUpgradesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelUpgradesLayout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(jPanelUpgradesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblUpgradeBarSpeed)
                            .addGroup(jPanelUpgradesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblSpeed)
                                .addComponent(lblIconSpeed, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelUpgradesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btnPlusSpeed, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblMovementspeedGems))))
                    .addGroup(jPanelUpgradesLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(lblIconGemsSpeed, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanelUpgradesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelUpgradesLayout.createSequentialGroup()
                        .addGroup(jPanelUpgradesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanelUpgradesLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanelUpgradesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelUpgradesLayout.createSequentialGroup()
                                        .addGroup(jPanelUpgradesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(jPanelUpgradesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(btnPlusBulletSpeed, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(lblBulletspeedGems))
                                            .addComponent(lblIconGemsBulletSpeed, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(1, 1, 1))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelUpgradesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lblIconSpeed1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lblBulletSpeed)))
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jPanelUpgradesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelUpgradesLayout.createSequentialGroup()
                                        .addGroup(jPanelUpgradesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(lblBulletPower)
                                            .addComponent(lblIconSpeed4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(4, 4, 4))
                                    .addComponent(lblIconGemsBulletPower, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanelUpgradesLayout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(lblUpgradeBarBulletSpeed)
                                .addGap(30, 30, 30)
                                .addGroup(jPanelUpgradesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblUpgradeBarBulletPower)
                                    .addGroup(jPanelUpgradesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(btnPlusBulletPower, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lblBulletdamageGems)))))
                        .addGap(20, 20, 20)
                        .addGroup(jPanelUpgradesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelUpgradesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblFireRate)
                                .addComponent(lblIconSpeed3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelUpgradesLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(jPanelUpgradesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanelUpgradesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(btnPlusFireRate, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lblFirerateGems))
                                    .addComponent(lblUpgradeBarFireRate)))))
                    .addGroup(jPanelUpgradesLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblIconGemsFireRate, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelUpgradesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelUpgradesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblHitpoints)
                        .addComponent(lblIconSpeed2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblUpgradeBarHitpoints)
                    .addGroup(jPanelUpgradesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnPlusHitpoints, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblHitpointsGems))
                    .addComponent(lblIconGemsHitpoints, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        getContentPane().add(jPanelUpgrades);
        jPanelUpgrades.setBounds(60, 120, 660, 350);

        jPanelCompanionUpgrades.setBackground(new java.awt.Color(0, 102, 0));
        jPanelCompanionUpgrades.setMinimumSize(new java.awt.Dimension(660, 350));

        lblBulletSpeed1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblBulletSpeed1.setText("Companion");

        lblUpgradeBarCompanion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/onderdelen/upgradeBar/bar-0.png"))); // NOI18N

        lblIconSpeed6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/onderdelen/upgradeIcons/bulletSpeed.png"))); // NOI18N
        lblIconSpeed6.setText("jLabel1");

        lblIconGemsBulletSpeed1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/sprites/geomSprite.png"))); // NOI18N

        btnPlusCompanion.setText("+");
        btnPlusCompanion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlusCompanionActionPerformed(evt);
            }
        });

        lblCompanionGems.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        lblCompanionGems.setText("Gems");

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        jLabel1.setText("Companion Upgrade");

        javax.swing.GroupLayout jPanelCompanionUpgradesLayout = new javax.swing.GroupLayout(jPanelCompanionUpgrades);
        jPanelCompanionUpgrades.setLayout(jPanelCompanionUpgradesLayout);
        jPanelCompanionUpgradesLayout.setHorizontalGroup(
            jPanelCompanionUpgradesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCompanionUpgradesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelCompanionUpgradesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelCompanionUpgradesLayout.createSequentialGroup()
                        .addComponent(lblIconSpeed6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblBulletSpeed1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblUpgradeBarCompanion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnPlusCompanion, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblCompanionGems, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblIconGemsBulletSpeed1))
                    .addComponent(jLabel1))
                .addContainerGap())
        );
        jPanelCompanionUpgradesLayout.setVerticalGroup(
            jPanelCompanionUpgradesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelCompanionUpgradesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 91, Short.MAX_VALUE)
                .addGroup(jPanelCompanionUpgradesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblUpgradeBarCompanion)
                    .addGroup(jPanelCompanionUpgradesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblIconSpeed6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblBulletSpeed1))
                    .addGroup(jPanelCompanionUpgradesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnPlusCompanion, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblCompanionGems))
                    .addComponent(lblIconGemsBulletSpeed1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(173, 173, 173))
        );

        getContentPane().add(jPanelCompanionUpgrades);
        jPanelCompanionUpgrades.setBounds(60, 120, 660, 350);

        jPanelShip.setBackground(new java.awt.Color(0, 102, 0));

        lblShipsName.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        lblShipsName.setText("Ship's Name");

        lblAfbeeldingSchip.setText("Afbeelding Schip");
        lblAfbeeldingSchip.setOpaque(true);

        btnNextShip.setText(">");
        btnNextShip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextShipActionPerformed(evt);
            }
        });

        btnPreviousShip.setText("<");
        btnPreviousShip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreviousShipActionPerformed(evt);
            }
        });

        btnUpgradeShip.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/buttons/upgrade.png"))); // NOI18N
        btnUpgradeShip.setText("Upgrade");
        btnUpgradeShip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpgradeShipActionPerformed(evt);
            }
        });

        current_ship.setText("Current Ship: ");

        current_selected_ship.setText("shipname");

        btnShipSelect.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/buttons/select.png"))); // NOI18N
        btnShipSelect.setText("SELECT");
        btnShipSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShipSelectActionPerformed(evt);
            }
        });

        btnShipBuy.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/buttons/buy.png"))); // NOI18N
        btnShipBuy.setText("BUY");
        btnShipBuy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShipBuyActionPerformed(evt);
            }
        });

        lblPrice.setText("0");

        javax.swing.GroupLayout jPanelShipLayout = new javax.swing.GroupLayout(jPanelShip);
        jPanelShip.setLayout(jPanelShipLayout);
        jPanelShipLayout.setHorizontalGroup(
            jPanelShipLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelShipLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelShipLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelShipLayout.createSequentialGroup()
                        .addComponent(btnUpgradeShip, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblShipsName, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(current_ship)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(current_selected_ship, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelShipLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnPreviousShip)
                        .addGap(170, 170, 170)
                        .addComponent(lblAfbeeldingSchip, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(170, 170, 170)
                        .addComponent(btnNextShip))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelShipLayout.createSequentialGroup()
                        .addGap(179, 179, 179)
                        .addComponent(btnShipBuy, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnShipSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(15, 15, 15))
        );
        jPanelShipLayout.setVerticalGroup(
            jPanelShipLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelShipLayout.createSequentialGroup()
                .addGroup(jPanelShipLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblShipsName)
                    .addComponent(btnUpgradeShip, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(current_ship)
                    .addComponent(current_selected_ship))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelShipLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAfbeeldingSchip, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNextShip)
                    .addComponent(btnPreviousShip))
                .addGroup(jPanelShipLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelShipLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelShipLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnShipSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPrice))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelShipLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnShipBuy, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28))))
        );

        getContentPane().add(jPanelShip);
        jPanelShip.setBounds(60, 120, 660, 350);

        jPanelCompanion.setBackground(new java.awt.Color(0, 102, 0));

        lblCompanionName.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        lblCompanionName.setText("Companion's Name");

        lblAfbeeldingCompanion.setText("Afbeelding Buddy");

        btnNextCompanion.setText(">");
        btnNextCompanion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextCompanionActionPerformed(evt);
            }
        });

        btnPreviousCompanion.setText("<");
        btnPreviousCompanion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreviousCompanionActionPerformed(evt);
            }
        });

        btnUpgradeCompanion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/buttons/upgrade.png"))); // NOI18N
        btnUpgradeCompanion.setText("Upgrade");
        btnUpgradeCompanion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpgradeCompanionActionPerformed(evt);
            }
        });

        current_ship1.setText("Selected Companion: ");

        current_selected_companion.setText("companionName");

        btnCompanionSelect.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/buttons/select.png"))); // NOI18N
        btnCompanionSelect.setText("SELECT");
        btnCompanionSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCompanionSelectActionPerformed(evt);
            }
        });

        btnCompanionBuy.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/buttons/buy.png"))); // NOI18N
        btnCompanionBuy.setText("BUY");
        btnCompanionBuy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCompanionBuyActionPerformed(evt);
            }
        });

        lblCompanionPrice.setText("0");

        javax.swing.GroupLayout jPanelCompanionLayout = new javax.swing.GroupLayout(jPanelCompanion);
        jPanelCompanion.setLayout(jPanelCompanionLayout);
        jPanelCompanionLayout.setHorizontalGroup(
            jPanelCompanionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCompanionLayout.createSequentialGroup()
                .addGroup(jPanelCompanionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelCompanionLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(btnUpgradeCompanion, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelCompanionLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(btnPreviousCompanion)))
                .addGroup(jPanelCompanionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelCompanionLayout.createSequentialGroup()
                        .addGroup(jPanelCompanionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelCompanionLayout.createSequentialGroup()
                                .addGap(61, 61, 61)
                                .addComponent(btnCompanionSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnCompanionBuy, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelCompanionLayout.createSequentialGroup()
                                .addGap(100, 100, 100)
                                .addComponent(lblAfbeeldingCompanion, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(33, 33, 33)
                        .addGroup(jPanelCompanionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelCompanionLayout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(btnNextCompanion))
                            .addComponent(lblCompanionPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanelCompanionLayout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addComponent(current_ship1)
                        .addGap(18, 18, 18)
                        .addComponent(current_selected_companion, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelCompanionLayout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(lblCompanionName, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10))
        );
        jPanelCompanionLayout.setVerticalGroup(
            jPanelCompanionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCompanionLayout.createSequentialGroup()
                .addGroup(jPanelCompanionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelCompanionLayout.createSequentialGroup()
                        .addGroup(jPanelCompanionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCompanionName)
                            .addComponent(btnUpgradeCompanion, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(jPanelCompanionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblAfbeeldingCompanion, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnNextCompanion)
                            .addComponent(btnPreviousCompanion)))
                    .addGroup(jPanelCompanionLayout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addGroup(jPanelCompanionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(current_ship1)
                            .addComponent(current_selected_companion))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelCompanionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCompanionPrice)
                    .addComponent(btnCompanionSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCompanionBuy, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31))
        );

        getContentPane().add(jPanelCompanion);
        jPanelCompanion.setBounds(60, 120, 660, 350);

        jPanelCurrency.setBackground(new java.awt.Color(0, 102, 0));
        jPanelCurrency.setPreferredSize(new java.awt.Dimension(290, 50));

        lblCoins.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/sprites/coinSprite.png"))); // NOI18N
        lblCoins.setText("C:");

        lblContentCoins.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblContentCoins.setText("10000");

        lblGems.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/sprites/geomSprite.png"))); // NOI18N

        lblContentGems.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblContentGems.setText("250");

        javax.swing.GroupLayout jPanelCurrencyLayout = new javax.swing.GroupLayout(jPanelCurrency);
        jPanelCurrency.setLayout(jPanelCurrencyLayout);
        jPanelCurrencyLayout.setHorizontalGroup(
            jPanelCurrencyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCurrencyLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(lblCoins, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblContentCoins)
                .addGap(34, 34, 34)
                .addComponent(lblGems)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblContentGems)
                .addGap(56, 56, 56))
        );
        jPanelCurrencyLayout.setVerticalGroup(
            jPanelCurrencyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelCurrencyLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelCurrencyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblContentGems)
                    .addComponent(lblGems)
                    .addGroup(jPanelCurrencyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(lblCoins, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblContentCoins)))
                .addGap(33, 33, 33))
        );

        getContentPane().add(jPanelCurrency);
        jPanelCurrency.setBounds(450, 0, 300, 50);

        btnShip.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/buttons/ship-nonActive.png"))); // NOI18N
        btnShip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShipActionPerformed(evt);
            }
        });
        getContentPane().add(btnShip);
        btnShip.setBounds(270, 90, 120, 30);

        btnCompanion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/buttons/companion-nonActive.png"))); // NOI18N
        btnCompanion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCompanionActionPerformed(evt);
            }
        });
        getContentPane().add(btnCompanion);
        btnCompanion.setBounds(390, 90, 120, 30);

        lblShip.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/buttons/ship-active.png"))); // NOI18N
        getContentPane().add(lblShip);
        lblShip.setBounds(270, 90, 120, 30);

        lblCompanion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/buttons/companion-active.png"))); // NOI18N
        getContentPane().add(lblCompanion);
        lblCompanion.setBounds(390, 90, 120, 30);

        btnStartGame.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/buttons/start.png"))); // NOI18N
        btnStartGame.setText("Start Game");
        btnStartGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartGameActionPerformed(evt);
            }
        });
        getContentPane().add(btnStartGame);
        btnStartGame.setBounds(620, 540, 160, 50);

        btnClan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/buttons/clan.png"))); // NOI18N
        btnClan.setText("Clan");
        btnClan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClanActionPerformed(evt);
            }
        });
        getContentPane().add(btnClan);
        btnClan.setBounds(190, 540, 160, 50);

        btnSettings.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/buttons/settings.png"))); // NOI18N
        btnSettings.setText("jButton1");
        getContentPane().add(btnSettings);
        btnSettings.setBounds(20, 540, 160, 50);

        btnHighscores.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/buttons/highscores.png"))); // NOI18N
        btnHighscores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHighscoresActionPerformed(evt);
            }
        });
        getContentPane().add(btnHighscores);
        btnHighscores.setBounds(360, 540, 160, 50);

        btnBackUpgrades.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/buttons/back.png"))); // NOI18N
        btnBackUpgrades.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackUpgradesActionPerformed(evt);
            }
        });
        getContentPane().add(btnBackUpgrades);
        btnBackUpgrades.setBounds(60, 480, 160, 50);

        lblBackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/backgrounds/shop-bg1.png"))); // NOI18N
        lblBackground.setMaximumSize(new java.awt.Dimension(1920, 1080));
        lblBackground.setMinimumSize(new java.awt.Dimension(1920, 1080));
        getContentPane().add(lblBackground);
        lblBackground.setBounds(0, 0, 1920, 600);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        jPanelCompanion.setVisible(false);
        btnShip.setVisible(false);
        lblCompanion.setVisible(false);
        jPanelUpgrades.setVisible(false);
        jPanelCompanionUpgrades.setVisible(false);
        btnBackUpgrades.setVisible(false);
    }//GEN-LAST:event_formWindowOpened

    private void btnShipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShipActionPerformed
        jPanelCompanion.setVisible(false);
        jPanelShip.setVisible(true);
        btnShip.setVisible(false);
        lblShip.setVisible(true);
        btnCompanion.setVisible(true);
        lblCompanion.setVisible(false);
    }//GEN-LAST:event_btnShipActionPerformed

    private void btnPlusHitpointsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlusHitpointsActionPerformed
         int currentGeoms = GameDA.getInstance().getGeoms(playerId);
        Upgrades upgrades = GameDA.getInstance().getUpgrades(playerId, charCounter);
        int leveloflives = upgrades.getLeveloflives();
        int livesPrice = GameDA.getInstance().getPriceLeveloflives(leveloflives + 1);
        if (currentGeoms >= livesPrice) {
            int newBalance = currentGeoms - livesPrice;
            GameDA.getInstance().setNewGeomBalance(newBalance, playerId);
            GameDA.getInstance().setLivesUpgrade(playerId, charCounter, leveloflives + 1);
            getGeomsAndCoins();
            refreshUpgrades();
        } else {
            JOptionPane.showMessageDialog(null, "Not enough geoms");
        }
    }//GEN-LAST:event_btnPlusHitpointsActionPerformed

    private void btnPlusSpeedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlusSpeedActionPerformed
        int currentGeoms = GameDA.getInstance().getGeoms(playerId);
        Upgrades upgrades = GameDA.getInstance().getUpgrades(playerId, charCounter);
        int levelofmovementspeed = upgrades.getLevelofmovementspeed();
        int movementspeedPrice = GameDA.getInstance().getPriceLevelofmovementspeed(levelofmovementspeed + 1);
        if (currentGeoms >= movementspeedPrice) {
            int newBalance = currentGeoms - movementspeedPrice;
            GameDA.getInstance().setNewGeomBalance(newBalance, playerId);
            GameDA.getInstance().setMovementspeedUpgrade(playerId, charCounter, levelofmovementspeed + 1);
            getGeomsAndCoins();
            refreshUpgrades();
        } else {
            JOptionPane.showMessageDialog(null, "Not enough geoms");
        }
    }//GEN-LAST:event_btnPlusSpeedActionPerformed

    private void btnCompanionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCompanionActionPerformed
        jPanelCompanion.setVisible(true);
        jPanelShip.setVisible(false);
        btnShip.setVisible(true);
        lblShip.setVisible(false);
        btnCompanion.setVisible(false);
        lblCompanion.setVisible(true);
    }//GEN-LAST:event_btnCompanionActionPerformed

    private void btnNextShipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextShipActionPerformed
        //lblAfbeeldingSchip.setBackground(Color.yellow);

        model.Character nextShip = null;
        if (charId + 1 < allCharacters.size()) {
            System.out.println(charCounter);
            nextShip = allCharacters.get(charId + 1);
        }
        if (nextShip != null) {
            String spritename = nextShip.getSprite();

            System.out.println("spritename:" + spritename + "-");
            lblAfbeeldingSchip.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/ships/" + spritename + ".png")));
            lblShipsName.setText(spritename);
            charCounter += 1;
            charId += 1;
            checkBoughtandSelect();
        }
    }//GEN-LAST:event_btnNextShipActionPerformed

    private void btnPreviousShipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreviousShipActionPerformed
        //lblAfbeeldingSchip.setBackground(Color.CYAN);
        model.Character nextShip = null;
        System.out.println("charid:" + charId);
        if (charId - 1 >= 0) {
            System.out.println(charCounter);
            nextShip = allCharacters.get(charId - 1);
        }
        if (nextShip != null) {
            String spritename = nextShip.getSprite();
            lblAfbeeldingSchip.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/ships/" + spritename + ".png")));
            lblShipsName.setText(spritename);
            charCounter -= 1;
            charId -= 1;
            checkBoughtandSelect();
        }

    }//GEN-LAST:event_btnPreviousShipActionPerformed

    private void checkBoughtandSelect() {
        //functie meegeven playerid en char id, ophalen isBought ja nee
        int isBought = GameDA.getInstance().isBought(playerId, charCounter);
        if (isBought == 1) {
            // show selectbutton
            btnShipBuy.setVisible(false);
            lblPrice.setVisible(false);
            btnShipSelect.setVisible(true);
            btnUpgradeShip.setVisible(true);

        } else {
            // show buy button + price
            btnShipSelect.setVisible(false);
            btnShipBuy.setVisible(true);
            lblPrice.setVisible(true);
            btnUpgradeShip.setVisible(false);
            //show price
            int shipPrice = allCharacters.get(charId).getPrice();

            lblPrice.setText(Integer.toString(shipPrice));

        }
    }
    
    private void checkBoughtandSelectCompanion() {
        //functie meegeven playerid en char id, ophalen isBought ja nee
        int isBought = GameDA.getInstance().isBoughtCompanion(playerId, companionCounter);
        if (isBought == 1) {
            // show selectbutton
            btnCompanionBuy.setVisible(false);
            lblCompanionPrice.setVisible(false);
            btnCompanionSelect.setVisible(true);
            btnUpgradeCompanion.setVisible(true);

        } else {
            // show buy button + price
            btnCompanionSelect.setVisible(false);
            btnCompanionBuy.setVisible(true);
            lblCompanionPrice.setVisible(true);
            btnUpgradeCompanion.setVisible(false);
            //show price
            int companionPrice = allCompanions.get(companionId).getPrice();

            lblCompanionPrice.setText(Integer.toString(companionPrice));

        }
    }

    private void getGeomsAndCoins() {
        lblContentCoins.setText(Integer.toString(GameDA.getInstance().getPremiumcoins(playerId)));
        lblContentGems.setText(Integer.toString(GameDA.getInstance().getGeoms(playerId)));
    }

    private void btnUpgradeShipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpgradeShipActionPerformed
        jPanelUpgrades.setVisible(true);
        btnBackUpgrades.setVisible(true);
        btnUpgradeShip.setVisible(false);
        refreshUpgrades();
        btnShipSelect.setVisible(false);
        btnPreviousShip.setVisible(false);
        btnNextShip.setVisible(false);
    }//GEN-LAST:event_btnUpgradeShipActionPerformed

    private void refreshUpgrades() {
        Upgrades upgrades = GameDA.getInstance().getUpgrades(playerId, charCounter);

        //imgicon leveloflives
        int leveloflives = upgrades.getLeveloflives();
        if (leveloflives < 6) {
            int livesPrice = GameDA.getInstance().getPriceLeveloflives(leveloflives + 1);
            lblHitpointsGems.setText(Integer.toString(livesPrice));
            btnPlusHitpoints.setEnabled(true);
        } else {
            btnPlusHitpoints.setEnabled(false);
            lblHitpointsGems.setText("N/A");

        }
        //System.out.println("level of lives: "+leveloflives);
        //System.out.println("level of lives: "+livesPrice);
        ImageIcon leveloflivesicon = new ImageIcon("src/img/onderdelen/upgradeBar/bar-" + (leveloflives - 1) + ".png");
        lblUpgradeBarHitpoints.setIcon(leveloflivesicon);

        //imgicon leveloffirerate
        int leveloffirerate = upgrades.getLeveloffirerate();
        if (leveloffirerate < 6) {
            int fireratePrice = GameDA.getInstance().getPriceLeveloffirerate(leveloffirerate + 1);
            lblFirerateGems.setText(Integer.toString(fireratePrice));
            btnPlusFireRate.setEnabled(true);
        } else {
            btnPlusFireRate.setEnabled(false);
            lblFirerateGems.setText("N/A");
        }
        //System.out.println("level of lives: "+leveloflives);
        ImageIcon leveloffirerateicon = new ImageIcon("src/img/onderdelen/upgradeBar/bar-" + (leveloffirerate - 1) + ".png");
        lblUpgradeBarFireRate.setIcon(leveloffirerateicon);

        //imgicon levelofmovementspeed
        int levelofmovementspeed = upgrades.getLevelofmovementspeed();
        if (levelofmovementspeed < 6) {
            int movementspeedPrice = GameDA.getInstance().getPriceLevelofmovementspeed(levelofmovementspeed + 1);
            lblMovementspeedGems.setText(Integer.toString(movementspeedPrice));
            btnPlusSpeed.setEnabled(true);
        } else {
            btnPlusSpeed.setEnabled(false);
            lblMovementspeedGems.setText("N/A");
        }
        ImageIcon levelofmovementspeedicon = new ImageIcon("src/img/onderdelen/upgradeBar/bar-" + (levelofmovementspeed - 1) + ".png");
        lblUpgradeBarSpeed.setIcon(levelofmovementspeedicon);

        //imgicon levelofbulletspeed
        int levelofbulletspeed = upgrades.getLevelofbulletspeed();
        if (levelofbulletspeed < 6) {
            int bulletspeedPrice = GameDA.getInstance().getPriceLevelofbulletspeed(levelofbulletspeed + 1);
            lblBulletspeedGems.setText(Integer.toString(bulletspeedPrice));
            btnPlusBulletSpeed.setEnabled(true);
        } else {
            lblBulletspeedGems.setText("N/A");
            btnPlusBulletSpeed.setEnabled(false);
        }
        ImageIcon levelofbulletspeedicon = new ImageIcon("src/img/onderdelen/upgradeBar/bar-" + (levelofbulletspeed - 1) + ".png");
        lblUpgradeBarBulletSpeed.setIcon(levelofbulletspeedicon);

        //imgicon levelofbulletdamage
        int levelofbulletdamage = upgrades.getLevelofbulletdamage();
        if (levelofbulletdamage < 6) {
            int bulletdamagePrice = GameDA.getInstance().getPriceLevelofbulletdamage(levelofbulletdamage + 1);
            lblBulletdamageGems.setText(Integer.toString(bulletdamagePrice));
            btnPlusBulletPower.setEnabled(true);
        } else {
            btnPlusBulletPower.setEnabled(false);
            lblBulletdamageGems.setText("N/A");
        }
        ImageIcon levelofbulletdamageicon = new ImageIcon("src/img/onderdelen/upgradeBar/bar-" + (levelofbulletdamage - 1) + ".png");
        lblUpgradeBarBulletPower.setIcon(levelofbulletdamageicon);

        //prices naast zetten
    };
    
    private void refreshUpgradesCompanion(){
        int level = GameDA.getInstance().getUpgradesCompanion(playerId, companionCounter);
        if (level< 6) {
            int companionLevelPrice = GameDA.getInstance().getPriceLevelofCompanion(level + 1);
            lblCompanionGems.setText(Integer.toString(companionLevelPrice));
            btnPlusCompanion.setEnabled(true);
        } else {
            btnPlusCompanion.setEnabled(false);
            lblCompanionGems.setText("N/A");
        }
        ImageIcon levelicon = new ImageIcon("src/img/onderdelen/upgradeBar/bar-" + (level - 1) + ".png");
        lblUpgradeBarCompanion.setIcon(levelicon);
        
    }
    
    private void btnBackUpgradesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackUpgradesActionPerformed
        jPanelUpgrades.setVisible(false);
        jPanelCompanionUpgrades.setVisible(false);
        btnBackUpgrades.setVisible(false);
        btnUpgradeShip.setVisible(true);
        btnUpgradeCompanion.setVisible(true);
        btnShipSelect.setVisible(true);
        btnCompanionSelect.setVisible(true);
        btnPreviousCompanion.setVisible(true);
        btnNextCompanion.setVisible(true);
        btnPreviousShip.setVisible(true);
        btnNextShip.setVisible(true);
    }//GEN-LAST:event_btnBackUpgradesActionPerformed

    private void btnUpgradeCompanionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpgradeCompanionActionPerformed
        jPanelCompanionUpgrades.setVisible(true);
        btnBackUpgrades.setVisible(true);
        btnUpgradeCompanion.setVisible(false);
        refreshUpgradesCompanion();
        btnCompanionSelect.setVisible(false);
        btnPreviousCompanion.setVisible(false);
        btnNextCompanion.setVisible(false);
    }//GEN-LAST:event_btnUpgradeCompanionActionPerformed

    private void btnClanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClanActionPerformed
        JOptionPane.showMessageDialog(null, "This is not implemented yet");
    }//GEN-LAST:event_btnClanActionPerformed

    private void btnStartGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartGameActionPerformed
        new StartGameFrame(playername,selectedCharCounter,selectedCompanionCounter).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnStartGameActionPerformed

    private void btnHighscoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHighscoresActionPerformed
        new HighscoreFrame(playername).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnHighscoresActionPerformed

    private void btnShipBuyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShipBuyActionPerformed

        int currentGeoms = GameDA.getInstance().getGeoms(playerId);
        int characterPrice = allCharacters.get(charId).getPrice();

        if (currentGeoms > characterPrice) {
            //koop character
            GameDA.getInstance().buyCharacter(playerId, charCounter);
            int newBalance = currentGeoms - characterPrice;
            GameDA.getInstance().setNewGeomBalance(newBalance, playerId);
            checkBoughtandSelect();
            getGeomsAndCoins();
        } else {
            JOptionPane.showMessageDialog(null, "Not enough geoms");
        }

    }//GEN-LAST:event_btnShipBuyActionPerformed

    private void showSelectedCharCounter() {

        model.Character firstShip = allCharacters.get(charId);
        String spritename = firstShip.getSprite();
        current_selected_ship.setText(spritename);
    }
    
    private void showSelectedCompanionCounter(){
        
        CompanionShop companion = allCompanions.get(companionId );
        String spritename = companion.getSprite();
        current_selected_companion.setText(spritename);
    }

    private void btnShipSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShipSelectActionPerformed
        //set global variable selected

        selectedCharCounter = charCounter;
        showSelectedCharCounter();

    }//GEN-LAST:event_btnShipSelectActionPerformed

    private void btnPlusBulletSpeedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlusBulletSpeedActionPerformed
        int currentGeoms = GameDA.getInstance().getGeoms(playerId);
        Upgrades upgrades = GameDA.getInstance().getUpgrades(playerId, charCounter);
        int levelofbulletspeed = upgrades.getLevelofbulletspeed();
        int bulletspeedPrice = GameDA.getInstance().getPriceLevelofbulletspeed(levelofbulletspeed + 1);
        if (currentGeoms >= bulletspeedPrice) {
            int newBalance = currentGeoms - bulletspeedPrice;
            GameDA.getInstance().setNewGeomBalance(newBalance, playerId);
            GameDA.getInstance().setBulletspeedUpgrade(playerId, charCounter, levelofbulletspeed + 1);

            getGeomsAndCoins();
            refreshUpgrades();
        } else {
            JOptionPane.showMessageDialog(null, "Not enough geoms");
        }

    }//GEN-LAST:event_btnPlusBulletSpeedActionPerformed

    private void btnPlusBulletPowerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlusBulletPowerActionPerformed
        int currentGeoms = GameDA.getInstance().getGeoms(playerId);
        Upgrades upgrades = GameDA.getInstance().getUpgrades(playerId, charCounter);
        int levelofbulletdamage = upgrades.getLevelofbulletdamage();
        int bulletdamagePrice = GameDA.getInstance().getPriceLevelofbulletdamage(levelofbulletdamage + 1);
        if (currentGeoms >= bulletdamagePrice) {
            int newBalance = currentGeoms - bulletdamagePrice;
            GameDA.getInstance().setNewGeomBalance(newBalance, playerId);
            GameDA.getInstance().setBulletdamageUpgrade(playerId, charCounter, levelofbulletdamage + 1);

            getGeomsAndCoins();
            refreshUpgrades();
        } else {
            JOptionPane.showMessageDialog(null, "Not enough geoms");
        }
    }//GEN-LAST:event_btnPlusBulletPowerActionPerformed

    private void btnPlusFireRateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlusFireRateActionPerformed
        int currentGeoms = GameDA.getInstance().getGeoms(playerId);
        Upgrades upgrades = GameDA.getInstance().getUpgrades(playerId, charCounter);
        int leveloffirerate = upgrades.getLeveloffirerate();
        int fireratePrice = GameDA.getInstance().getPriceLeveloffirerate(leveloffirerate + 1);
        if (currentGeoms >= fireratePrice) {
            int newBalance = currentGeoms - fireratePrice;
            GameDA.getInstance().setNewGeomBalance(newBalance, playerId);
            GameDA.getInstance().setFirerateUpgrade(playerId, charCounter, leveloffirerate + 1);

            getGeomsAndCoins();
            refreshUpgrades();
        } else {
            JOptionPane.showMessageDialog(null, "Not enough geoms");
        }
    }//GEN-LAST:event_btnPlusFireRateActionPerformed

    private void btnPlusCompanionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlusCompanionActionPerformed
        int currentGeoms = GameDA.getInstance().getGeoms(playerId);
        //Upgrades upgrades = GameDA.getInstance().getUpgrades(playerId, charCounter);
        int level = GameDA.getInstance().getUpgradesCompanion(playerId, companionCounter);
       // int leveloffirerate = upgrades.getLeveloffirerate();
        int companionUpgradePrice = GameDA.getInstance().getPriceLevelofCompanion(level + 1);
        if (currentGeoms >= companionUpgradePrice) {
            int newBalance = currentGeoms - companionUpgradePrice;
            GameDA.getInstance().setNewGeomBalance(newBalance, playerId);
            
            GameDA.getInstance().setCompanionUpgrade(playerId, companionCounter, level + 1);

            getGeomsAndCoins();
            refreshUpgradesCompanion();
        } else {
            JOptionPane.showMessageDialog(null, "Not enough geoms");
        }
    }//GEN-LAST:event_btnPlusCompanionActionPerformed

    private void btnCompanionSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCompanionSelectActionPerformed
        selectedCompanionCounter = companionCounter;
        showSelectedCompanionCounter();
    }//GEN-LAST:event_btnCompanionSelectActionPerformed

    private void btnCompanionBuyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCompanionBuyActionPerformed
        
        int currentGeoms = GameDA.getInstance().getGeoms(playerId);
        int companionPrice = allCompanions.get(companionId).getPrice();

        if (currentGeoms > companionPrice) {
            //koop character
            // buyCompanion da
            GameDA.getInstance().buyCompanion(playerId, companionCounter);
            int newBalance = currentGeoms - companionPrice;
            GameDA.getInstance().setNewGeomBalance(newBalance, playerId);
            checkBoughtandSelectCompanion();
            getGeomsAndCoins();
        } else {
            JOptionPane.showMessageDialog(null, "Not enough geoms");
        }       
    }//GEN-LAST:event_btnCompanionBuyActionPerformed

    private void btnNextCompanionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextCompanionActionPerformed
        CompanionShop nextCompanion = null;
        if (companionId + 1 < allCompanions.size()) {
            System.out.println(charCounter);
            nextCompanion = allCompanions.get(companionId + 1);
        }
        if (nextCompanion != null) {
            String spritename = nextCompanion.getSprite();
            System.out.println("spritename-companion:"+spritename+"--");
            lblAfbeeldingCompanion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/companions/" + spritename + ".png")));
            lblCompanionName.setText(spritename);
            companionCounter += 1;
            companionId += 1;
            //checkBoughtandSelect();
            checkBoughtandSelectCompanion();
            
            //checkBoughtandSelect-- companions
        }        
    }//GEN-LAST:event_btnNextCompanionActionPerformed

    private void btnPreviousCompanionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreviousCompanionActionPerformed
        CompanionShop nextCompanion = null;
        if (companionId - 1 >= 0) {
            System.out.println(charCounter);
            nextCompanion = allCompanions.get(companionId - 1);
        }
        if (nextCompanion != null) {
            String spritename = nextCompanion.getSprite();
            lblAfbeeldingCompanion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/companions/" + spritename + ".png")));
            lblCompanionName.setText(spritename);
            companionCounter -= 1;
            companionId -= 1;
            //checkBoughtandSelect();
            checkBoughtandSelectCompanion();
            //checkBoughtandSelect-- companions
        } 
    }//GEN-LAST:event_btnPreviousCompanionActionPerformed

    private void InitCharacters() {
        model.Character firstShip = allCharacters.get(0);
        String spritename = firstShip.getSprite();
        lblAfbeeldingSchip.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/ships/" + spritename + ".png")));
        lblShipsName.setText(spritename);
    }
    
    private void InitCompanions(){
        CompanionShop firstCompanion = allCompanions.get(0);
        String spritename = firstCompanion.getSprite();
        lblAfbeeldingCompanion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/companions/" + spritename + ".png")));
        lblCompanionName.setText(spritename);
    }
    
  

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBackUpgrades;
    private javax.swing.JButton btnClan;
    private javax.swing.JButton btnCompanion;
    private javax.swing.JButton btnCompanionBuy;
    private javax.swing.JButton btnCompanionSelect;
    private javax.swing.JButton btnHighscores;
    private javax.swing.JButton btnNextCompanion;
    private javax.swing.JButton btnNextShip;
    private javax.swing.JButton btnPlusBulletPower;
    private javax.swing.JButton btnPlusBulletSpeed;
    private javax.swing.JButton btnPlusCompanion;
    private javax.swing.JButton btnPlusFireRate;
    private javax.swing.JButton btnPlusHitpoints;
    private javax.swing.JButton btnPlusSpeed;
    private javax.swing.JButton btnPreviousCompanion;
    private javax.swing.JButton btnPreviousShip;
    private javax.swing.JButton btnSettings;
    private javax.swing.JButton btnShip;
    private javax.swing.JButton btnShipBuy;
    private javax.swing.JButton btnShipSelect;
    private javax.swing.JButton btnStartGame;
    private javax.swing.JButton btnUpgradeCompanion;
    private javax.swing.JButton btnUpgradeShip;
    private javax.swing.JLabel current_selected_companion;
    private javax.swing.JLabel current_selected_ship;
    private javax.swing.JLabel current_ship;
    private javax.swing.JLabel current_ship1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelCompanion;
    private javax.swing.JPanel jPanelCompanionUpgrades;
    private javax.swing.JPanel jPanelCurrency;
    private javax.swing.JPanel jPanelShip;
    private javax.swing.JPanel jPanelUpgrades;
    private javax.swing.JLabel lblAfbeeldingCompanion;
    private javax.swing.JLabel lblAfbeeldingSchip;
    private javax.swing.JLabel lblBackground;
    private javax.swing.JLabel lblBulletPower;
    private javax.swing.JLabel lblBulletSpeed;
    private javax.swing.JLabel lblBulletSpeed1;
    private javax.swing.JLabel lblBulletdamageGems;
    private javax.swing.JLabel lblBulletspeedGems;
    private javax.swing.JLabel lblCoins;
    private javax.swing.JLabel lblCompanion;
    private javax.swing.JLabel lblCompanionGems;
    private javax.swing.JLabel lblCompanionName;
    private javax.swing.JLabel lblCompanionPrice;
    private javax.swing.JLabel lblContentCoins;
    private javax.swing.JLabel lblContentGems;
    private javax.swing.JLabel lblFireRate;
    private javax.swing.JLabel lblFirerateGems;
    private javax.swing.JLabel lblGems;
    private javax.swing.JLabel lblHitpoints;
    private javax.swing.JLabel lblHitpointsGems;
    private javax.swing.JLabel lblIconGemsBulletPower;
    private javax.swing.JLabel lblIconGemsBulletSpeed;
    private javax.swing.JLabel lblIconGemsBulletSpeed1;
    private javax.swing.JLabel lblIconGemsFireRate;
    private javax.swing.JLabel lblIconGemsHitpoints;
    private javax.swing.JLabel lblIconGemsSpeed;
    private javax.swing.JLabel lblIconSpeed;
    private javax.swing.JLabel lblIconSpeed1;
    private javax.swing.JLabel lblIconSpeed2;
    private javax.swing.JLabel lblIconSpeed3;
    private javax.swing.JLabel lblIconSpeed4;
    private javax.swing.JLabel lblIconSpeed6;
    private javax.swing.JLabel lblMovementspeedGems;
    private javax.swing.JLabel lblPrice;
    private javax.swing.JLabel lblShip;
    private javax.swing.JLabel lblShipsName;
    private javax.swing.JLabel lblSpeed;
    private javax.swing.JLabel lblUpgradeBarBulletPower;
    private javax.swing.JLabel lblUpgradeBarBulletSpeed;
    private javax.swing.JLabel lblUpgradeBarCompanion;
    private javax.swing.JLabel lblUpgradeBarFireRate;
    private javax.swing.JLabel lblUpgradeBarHitpoints;
    private javax.swing.JLabel lblUpgradeBarSpeed;
    // End of variables declaration//GEN-END:variables
}
